/**
 * Merge CRM API
 *
 * The unified API for building rich integrations with multiple CRM platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package dev.merge.client.crm.models

import dev.merge.client.crm.models.CategoriesEnum

import com.fasterxml.jackson.annotation.JsonProperty

/**
 * 
 *
 * @param name Company name.
 * @param categories Category or categories this integration belongs to. Multiple categories should be comma separated.<br/><br>Example: For [ats, hris], enter <i>ats,hris</i>
 * @param image Company logo in rectangular shape. <b>Upload an image with a clear background.</b>
 * @param squareImage Company logo in square shape. <b>Upload an image with a white background.</b>
 * @param color The color of this integration used for buttons and text throughout the app and landing pages. <b>Choose a darker, saturated color.</b>
 * @param slug 
 */

data class AccountIntegration (

    /* Company name. */
    @field:JsonProperty("name")
    val name: kotlin.String,

    /* Category or categories this integration belongs to. Multiple categories should be comma separated.<br/><br>Example: For [ats, hris], enter <i>ats,hris</i> */
    @field:JsonProperty("categories")
    val categories: kotlin.collections.List<CategoriesEnum>? = null,

    /* Company logo in rectangular shape. <b>Upload an image with a clear background.</b> */
    @field:JsonProperty("image")
    val image: java.net.URI? = null,

    /* Company logo in square shape. <b>Upload an image with a white background.</b> */
    @field:JsonProperty("square_image")
    val squareImage: java.net.URI? = null,

    /* The color of this integration used for buttons and text throughout the app and landing pages. <b>Choose a darker, saturated color.</b> */
    @field:JsonProperty("color")
    val color: kotlin.String? = null,

    @field:JsonProperty("slug")
    val slug: kotlin.String? = null

)

