/**
 * Merge ATS API
 *
 * The unified API for building rich integrations with multiple Applicant Tracking System platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package dev.merge.client.ats.models


import com.fasterxml.jackson.annotation.JsonProperty

/**
 * 
 *
 * Values: AMERICAN_INDIAN_OR_ALASKAN_NATIVE,ASIAN,BLACK_OR_AFRICAN_AMERICAN,HISPANIC_OR_LATINO,WHITE,NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER,TWO_OR_MORE_RACES,DECLINE_TO_SELF_IDENTIFY,UNKNOWN_DEFAULT_OPEN_API
 */

enum class RaceEnum(val value: kotlin.String) {

    @JsonProperty(value = "AMERICAN_INDIAN_OR_ALASKAN_NATIVE")
    AMERICAN_INDIAN_OR_ALASKAN_NATIVE("AMERICAN_INDIAN_OR_ALASKAN_NATIVE"),

    @JsonProperty(value = "ASIAN")
    ASIAN("ASIAN"),

    @JsonProperty(value = "BLACK_OR_AFRICAN_AMERICAN")
    BLACK_OR_AFRICAN_AMERICAN("BLACK_OR_AFRICAN_AMERICAN"),

    @JsonProperty(value = "HISPANIC_OR_LATINO")
    HISPANIC_OR_LATINO("HISPANIC_OR_LATINO"),

    @JsonProperty(value = "WHITE")
    WHITE("WHITE"),

    @JsonProperty(value = "NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER")
    NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER("NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER"),

    @JsonProperty(value = "TWO_OR_MORE_RACES")
    TWO_OR_MORE_RACES("TWO_OR_MORE_RACES"),

    @JsonProperty(value = "DECLINE_TO_SELF_IDENTIFY")
    DECLINE_TO_SELF_IDENTIFY("DECLINE_TO_SELF_IDENTIFY"),

    @JsonProperty(value = "unknown_default_open_api")
    UNKNOWN_DEFAULT_OPEN_API("unknown_default_open_api");

    /**
     * Override toString() to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): String = value

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: kotlin.Any?): kotlin.String? = if (data is RaceEnum) "$data" else null

        /**
         * Returns a valid [RaceEnum] for [data], null otherwise.
         */
        fun decode(data: kotlin.Any?): RaceEnum? = data?.let {
          val normalizedData = "$it".lowercase()
          values().firstOrNull { value ->
            it == value || normalizedData == "$value".lowercase()
          }
        }
    }
}

